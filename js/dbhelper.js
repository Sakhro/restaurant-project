class DBHelper{static get DATABASE_URL(){return`http://localhost:${1337}/restaurants`}static serviceWorker(){navigator.serviceWorker&&navigator.serviceWorker.register('/sw.js').then(function(){console.log('Registration worked!')}).catch(function(){console.log('Registration failed!')})}static fetchRestaurants(a){const b=new IndexedDB;b.getFromDB(a).then(()=>{fetch(DBHelper.DATABASE_URL).then((c)=>{c.json().then((c)=>{c?(b.putToDB(c),a(null,c)):a('Restaurant does not exist',null)})}).catch((b)=>{a(b,null)})})}static fetchRestaurantById(a,b){const c=new IndexedDB;c.getFromDBbyId(a).then((c)=>c?void b(null,c):void fetch(`http://localhost:1337/restaurants/${a}`).then((a)=>{a.json().then((a)=>{a?b(null,a):b('Restaurant does not exist',null)})}).catch((a)=>{b(a,null)}))}static getAllReviewsByRestaurantId(a,b){fetch(`http://localhost:1337/reviews/?restaurant_id=${a}`).then((a)=>{a.json().then((a)=>{a?b(null,a):b('Reviews does not exist',null)})}).catch((a)=>{b(a,null)})}static fetchRestaurantByCuisine(a,b){DBHelper.fetchRestaurants((c,d)=>{if(c)b(c,null);else{const c=d.filter((b)=>b.cuisine_type==a);b(null,c)}})}static fetchRestaurantByNeighborhood(a,b){DBHelper.fetchRestaurants((c,d)=>{if(c)b(c,null);else{const c=d.filter((b)=>b.neighborhood==a);b(null,c)}})}static fetchRestaurantByCuisineAndNeighborhood(a,b,c){DBHelper.fetchRestaurants((d,e)=>{if(d)c(d,null);else{let d=e;'all'!=a&&(d=d.filter((b)=>b.cuisine_type==a)),'all'!=b&&(d=d.filter((a)=>a.neighborhood==b)),c(null,d)}})}static fetchNeighborhoods(a){DBHelper.fetchRestaurants((b,c)=>{if(b)a(b,null);else{const b=c.map((a,b)=>c[b].neighborhood),d=b.filter((a,c)=>b.indexOf(a)==c);a(null,d)}})}static fetchCuisines(a){DBHelper.fetchRestaurants((b,c)=>{if(b)a(b,null);else{const b=c.map((a,b)=>c[b].cuisine_type),d=b.filter((a,c)=>b.indexOf(a)==c);a(null,d)}})}static urlForRestaurant(a){return`./restaurant.html?id=${a.id}`}static imageUrlForRestaurant(a){return`/img/${a.photograph}.jpg`}static mapMarkerForRestaurant(a,b){const c=new google.maps.Marker({position:a.latlng,title:a.name,url:DBHelper.urlForRestaurant(a),map:b,animation:google.maps.Animation.DROP});return c}}class IndexedDB extends DBHelper{openDatabase(){return navigator.serviceWorker?idb.open('restaurants-db',1,function(a){a.createObjectStore('restaurants',{keyPath:'id'})}):Promise.resolve()}putToDB(a){this.openDatabase().then(function(b){if(!b)return;let c=b.transaction('restaurants','readwrite'),d=c.objectStore('restaurants');a.forEach(function(a){d.put(a)})})}getFromDB(a){return this.openDatabase().then((b)=>{if(b){let c=b.transaction('restaurants').objectStore('restaurants');return c.getAll().then((b)=>{a(null,b)})}})}getFromDBbyId(a){return this.openDatabase().then((b)=>{let c=b.transaction('restaurants').objectStore('restaurants');return c.get(parseInt(a))})}}